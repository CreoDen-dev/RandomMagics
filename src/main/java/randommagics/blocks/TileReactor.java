package randommagics.blocks;

import java.awt.Point;
import java.util.HashSet;

import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.init.Blocks;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.world.ChunkPosition;
import randommagics.Init;
import randommagics.customs.BigExplosion;
import randommagics.customs.StructureHelper;
import randommagics.customs.StructureHelper.BlockInfo;
import thaumcraft.api.TileThaumcraft;
import thaumcraft.common.config.ConfigBlocks;

public class TileReactor extends TileThaumcraft {
	
	private static final StructureHelper structure = new StructureHelper("0/-9/-3/-8|0/-9/-3/-7|0/-9/-3/7|0/-9/-3/8|0/-9/-2/-8|0/-9/-2/-7|0/-9/-2/7|0/-9/-2/8|0/-9/-1/-8|0/-9/-1/-7|0/-9/-1/7|0/-9/-1/8|0/-9/0/-8|0/-9/0/-7|0/-9/0/7|0/-9/0/8|0/-9/1/-8|0/-9/1/-7|0/-9/1/7|0/-9/1/8|0/-9/2/-8|0/-9/2/-7|0/-9/2/7|0/-9/2/8|0/-9/3/-8|0/-9/3/-7|0/-9/3/7|0/-9/3/8|0/-9/4/-8|0/-9/4/-7|0/-9/4/7|0/-9/4/8|0/-9/5/-8|0/-9/5/-7|0/-9/5/7|0/-9/5/8|0/-9/6/-8|0/-9/6/-7|0/-9/6/7|0/-9/6/8|0/-9/7/-8|0/-9/7/-7|0/-9/7/7|0/-9/7/8|0/-9/8/-8|0/-9/8/-7|0/-9/8/7|0/-9/8/8|0/-9/9/-8|0/-9/9/-7|0/-9/9/7|0/-9/9/8|0/-8/-3/-9|0/-8/-3/-8|0/-8/-3/-7|0/-8/-3/-6|0/-8/-3/6|0/-8/-3/7|0/-8/-3/8|0/-8/-3/9|0/-8/-2/-9|0/-8/-2/-8|0/-8/-2/-7|0/-8/-2/-6|0/-8/-2/6|0/-8/-2/7|0/-8/-2/8|0/-8/-2/9|0/-8/-1/-9|0/-8/-1/-8|0/-8/-1/-7|0/-8/-1/-6|0/-8/-1/6|0/-8/-1/7|0/-8/-1/8|0/-8/-1/9|0/-8/0/-9|0/-8/0/-8|0/-8/0/-7|0/-8/0/-6|0/-8/0/6|0/-8/0/7|0/-8/0/8|0/-8/0/9|0/-8/1/-9|0/-8/1/-8|0/-8/1/-7|0/-8/1/-6|0/-8/1/6|0/-8/1/7|0/-8/1/8|0/-8/1/9|0/-8/2/-9|0/-8/2/-8|0/-8/2/-7|0/-8/2/-6|0/-8/2/6|0/-8/2/7|0/-8/2/8|0/-8/2/9|0/-8/3/-9|0/-8/3/-8|0/-8/3/-7|0/-8/3/-6|0/-8/3/6|0/-8/3/7|0/-8/3/8|0/-8/3/9|0/-8/4/-9|0/-8/4/-8|0/-8/4/-7|0/-8/4/-6|0/-8/4/6|0/-8/4/7|0/-8/4/8|0/-8/4/9|0/-8/5/-9|0/-8/5/-8|0/-8/5/-7|0/-8/5/-6|0/-8/5/6|0/-8/5/7|0/-8/5/8|0/-8/5/9|0/-8/6/-9|0/-8/6/-8|0/-8/6/-7|0/-8/6/-6|0/-8/6/6|0/-8/6/7|0/-8/6/8|0/-8/6/9|0/-8/7/-9|0/-8/7/-8|0/-8/7/-7|0/-8/7/-6|0/-8/7/6|0/-8/7/7|0/-8/7/8|0/-8/7/9|0/-8/8/-9|0/-8/8/-8|0/-8/8/-7|0/-8/8/-6|0/-8/8/6|0/-8/8/7|0/-8/8/8|0/-8/8/9|0/-8/9/-9|0/-8/9/-8|0/-8/9/-7|0/-8/9/-6|0/-8/9/6|0/-8/9/7|0/-8/9/8|0/-8/9/9|0/-8/10/-8|0/-8/10/-7|0/-8/10/7|0/-8/10/8|1/-8/11/-8|1/-8/11/-7|1/-8/11/7|1/-8/11/8|2/-8/12/-8|2/-8/12/-7|2/-8/12/7|2/-8/12/8|0/-7/-3/-9|0/-7/-3/-8|3/-7/-3/-7|3/-7/-3/-6|3/-7/-3/-5|3/-7/-3/0|3/-7/-3/5|3/-7/-3/6|3/-7/-3/7|0/-7/-3/8|0/-7/-3/9|0/-7/-2/-9|0/-7/-2/-8|3/-7/-2/-7|3/-7/-2/-6|3/-7/-2/0|3/-7/-2/6|3/-7/-2/7|0/-7/-2/8|0/-7/-2/9|0/-7/-1/-9|0/-7/-1/-8|3/-7/-1/-7|3/-7/-1/0|3/-7/-1/7|0/-7/-1/8|0/-7/-1/9|0/-7/0/-9|0/-7/0/-8|4/-7/0/0|0/-7/0/8|0/-7/0/9|0/-7/1/-9|0/-7/1/-8|0/-7/1/8|0/-7/1/9|0/-7/2/-9|0/-7/2/-8|0/-7/2/8|0/-7/2/9|0/-7/3/-9|0/-7/3/-8|1/-7/3/-7|1/-7/3/-5|1/-7/3/-3|1/-7/3/-1|1/-7/3/1|1/-7/3/3|1/-7/3/5|1/-7/3/7|0/-7/3/8|0/-7/3/9|0/-7/4/-9|0/-7/4/-8|2/-7/4/-7|2/-7/4/-5|2/-7/4/-3|2/-7/4/-1|2/-7/4/1|2/-7/4/3|2/-7/4/5|2/-7/4/7|0/-7/4/8|0/-7/4/9|0/-7/5/-9|0/-7/5/-8|0/-7/5/8|0/-7/5/9|0/-7/6/-9|0/-7/6/-8|0/-7/6/-7|0/-7/6/7|0/-7/6/8|0/-7/6/9|0/-7/7/-9|0/-7/7/-8|0/-7/7/-7|0/-7/7/-6|0/-7/7/6|0/-7/7/7|0/-7/7/8|0/-7/7/9|0/-7/8/-9|0/-7/8/-8|0/-7/8/-7|0/-7/8/-6|0/-7/8/6|0/-7/8/7|0/-7/8/8|0/-7/8/9|0/-7/9/-9|0/-7/9/-8|0/-7/9/-7|0/-7/9/-6|0/-7/9/6|0/-7/9/7|0/-7/9/8|0/-7/9/9|0/-7/10/-8|0/-7/10/-7|0/-7/10/7|0/-7/10/8|1/-7/11/-8|1/-7/11/-7|1/-7/11/7|1/-7/11/8|2/-7/12/-8|2/-7/12/-7|2/-7/12/7|2/-7/12/8|0/-6/-3/-8|3/-6/-3/-7|0/-6/-3/-6|0/-6/-3/6|3/-6/-3/7|0/-6/-3/8|0/-6/-2/-8|3/-6/-2/-7|3/-6/-2/7|0/-6/-2/8|0/-6/-1/-8|0/-6/-1/8|0/-6/0/-8|0/-6/0/8|0/-6/1/-8|0/-6/1/8|0/-6/2/-8|0/-6/2/8|0/-6/3/-8|0/-6/3/8|0/-6/4/-8|0/-6/4/8|0/-6/5/-8|0/-6/5/8|0/-6/6/-8|0/-6/6/8|0/-6/7/-8|0/-6/7/-7|0/-6/7/7|0/-6/7/8|0/-6/8/-8|0/-6/8/-7|0/-6/8/7|0/-6/8/8|0/-6/9/-8|0/-6/9/-7|0/-6/9/7|0/-6/9/8|3/-5/-3/-7|3/-5/-3/7|1/-5/3/-7|1/-5/3/7|2/-5/4/-7|2/-5/4/7|0/-3/-3/-3|0/-3/-3/-2|0/-3/-3/-1|0/-3/-3/0|0/-3/-3/1|0/-3/-3/2|0/-3/-3/3|1/-3/3/-7|1/-3/3/7|2/-3/4/-7|3/-3/4/-1|3/-3/4/0|3/-3/4/1|2/-3/4/7|1/-3/5/0|2/-3/6/0|0/-2/-3/-3|0/-2/-3/-2|0/-2/-3/-1|0/-2/-3/0|0/-2/-3/1|0/-2/-3/2|0/-2/-3/3|3/-2/-2/-2|3/-2/-2/0|3/-2/-2/2|5/-2/-1/-2|5/-2/-1/0|5/-2/-1/2|3/-2/3/0|3/-2/4/-2|3/-2/4/-1|0/-2/4/0|3/-2/4/1|3/-2/4/2|0/-1/-3/-3|0/-1/-3/-2|0/-1/-3/-1|0/-1/-3/0|0/-1/-3/1|0/-1/-3/2|0/-1/-3/3|3/-1/2/0|1/-1/3/-7|3/-1/3/-1|0/-1/3/0|3/-1/3/1|1/-1/3/7|2/-1/4/-7|3/-1/4/-3|3/-1/4/-2|0/-1/4/-1|0/-1/4/0|0/-1/4/1|3/-1/4/2|3/-1/4/3|2/-1/4/7|3/0/-3/-7|0/0/-3/-3|0/0/-3/-2|0/0/-3/-1|0/0/-3/0|0/0/-3/1|0/0/-3/2|0/0/-3/3|3/0/-3/7|3/0/-2/-7|3/0/-2/-2|6/0/-2/0|3/0/-2/2|3/0/-2/7|3/0/-1/-7|5/0/-1/-2|6/0/-1/0|5/0/-1/2|3/0/-1/7|4/0/0/-7|4/0/0/7|3/0/2/-1|3/0/2/1|3/0/3/-2|0/0/3/-1|0/0/3/1|3/0/3/2|3/0/4/-3|0/0/4/-2|0/0/4/-1|0/0/4/1|0/0/4/2|3/0/4/3|1/0/5/-3|1/0/5/3|2/0/6/-3|2/0/6/3|0/1/-3/-3|0/1/-3/-2|0/1/-3/-1|0/1/-3/0|0/1/-3/1|0/1/-3/2|0/1/-3/3|3/1/2/0|1/1/3/-7|3/1/3/-1|0/1/3/0|3/1/3/1|1/1/3/7|2/1/4/-7|3/1/4/-3|3/1/4/-2|0/1/4/-1|0/1/4/0|0/1/4/1|3/1/4/2|3/1/4/3|2/1/4/7|0/2/-3/-3|0/2/-3/-2|0/2/-3/-1|0/2/-3/0|0/2/-3/1|0/2/-3/2|0/2/-3/3|3/2/-2/-2|3/2/-2/0|3/2/-2/2|5/2/-1/-2|5/2/-1/0|5/2/-1/2|3/2/3/0|3/2/4/-2|3/2/4/-1|0/2/4/0|3/2/4/1|3/2/4/2|0/3/-3/-3|0/3/-3/-2|0/3/-3/-1|0/3/-3/0|0/3/-3/1|0/3/-3/2|0/3/-3/3|1/3/3/-7|1/3/3/7|2/3/4/-7|3/3/4/-1|3/3/4/0|3/3/4/1|2/3/4/7|1/3/5/0|2/3/6/0|3/5/-3/-7|3/5/-3/7|1/5/3/-7|1/5/3/7|2/5/4/-7|2/5/4/7|0/6/-3/-8|3/6/-3/-7|0/6/-3/-6|0/6/-3/6|3/6/-3/7|0/6/-3/8|0/6/-2/-8|3/6/-2/-7|3/6/-2/7|0/6/-2/8|0/6/-1/-8|0/6/-1/8|0/6/0/-8|0/6/0/8|0/6/1/-8|0/6/1/8|0/6/2/-8|0/6/2/8|0/6/3/-8|0/6/3/8|0/6/4/-8|0/6/4/8|0/6/5/-8|0/6/5/8|0/6/6/-8|0/6/6/8|0/6/7/-8|0/6/7/-7|0/6/7/7|0/6/7/8|0/6/8/-8|0/6/8/-7|0/6/8/7|0/6/8/8|0/6/9/-8|0/6/9/-7|0/6/9/7|0/6/9/8|0/7/-3/-9|0/7/-3/-8|3/7/-3/-7|3/7/-3/-6|3/7/-3/-5|3/7/-3/0|3/7/-3/5|3/7/-3/6|3/7/-3/7|0/7/-3/8|0/7/-3/9|0/7/-2/-9|0/7/-2/-8|3/7/-2/-7|3/7/-2/-6|3/7/-2/0|3/7/-2/6|3/7/-2/7|0/7/-2/8|0/7/-2/9|0/7/-1/-9|0/7/-1/-8|3/7/-1/-7|3/7/-1/0|3/7/-1/7|0/7/-1/8|0/7/-1/9|0/7/0/-9|0/7/0/-8|4/7/0/0|0/7/0/8|0/7/0/9|0/7/1/-9|0/7/1/-8|0/7/1/8|0/7/1/9|0/7/2/-9|0/7/2/-8|0/7/2/8|0/7/2/9|0/7/3/-9|0/7/3/-8|1/7/3/-7|1/7/3/-5|1/7/3/-3|1/7/3/-1|1/7/3/1|1/7/3/3|1/7/3/5|1/7/3/7|0/7/3/8|0/7/3/9|0/7/4/-9|0/7/4/-8|2/7/4/-7|2/7/4/-5|2/7/4/-3|2/7/4/-1|2/7/4/1|2/7/4/3|2/7/4/5|2/7/4/7|0/7/4/8|0/7/4/9|0/7/5/-9|0/7/5/-8|0/7/5/8|0/7/5/9|0/7/6/-9|0/7/6/-8|0/7/6/-7|0/7/6/7|0/7/6/8|0/7/6/9|0/7/7/-9|0/7/7/-8|0/7/7/-7|0/7/7/-6|0/7/7/6|0/7/7/7|0/7/7/8|0/7/7/9|0/7/8/-9|0/7/8/-8|0/7/8/-7|0/7/8/-6|0/7/8/6|0/7/8/7|0/7/8/8|0/7/8/9|0/7/9/-9|0/7/9/-8|0/7/9/-7|0/7/9/-6|0/7/9/6|0/7/9/7|0/7/9/8|0/7/9/9|0/7/10/-8|0/7/10/-7|0/7/10/7|0/7/10/8|1/7/11/-8|1/7/11/-7|1/7/11/7|1/7/11/8|2/7/12/-8|2/7/12/-7|2/7/12/7|2/7/12/8|0/8/-3/-9|0/8/-3/-8|0/8/-3/-7|0/8/-3/-6|0/8/-3/6|0/8/-3/7|0/8/-3/8|0/8/-3/9|0/8/-2/-9|0/8/-2/-8|0/8/-2/-7|0/8/-2/-6|0/8/-2/6|0/8/-2/7|0/8/-2/8|0/8/-2/9|0/8/-1/-9|0/8/-1/-8|0/8/-1/-7|0/8/-1/-6|0/8/-1/6|0/8/-1/7|0/8/-1/8|0/8/-1/9|0/8/0/-9|0/8/0/-8|0/8/0/-7|0/8/0/-6|0/8/0/6|0/8/0/7|0/8/0/8|0/8/0/9|0/8/1/-9|0/8/1/-8|0/8/1/-7|0/8/1/-6|0/8/1/6|0/8/1/7|0/8/1/8|0/8/1/9|0/8/2/-9|0/8/2/-8|0/8/2/-7|0/8/2/-6|0/8/2/6|0/8/2/7|0/8/2/8|0/8/2/9|0/8/3/-9|0/8/3/-8|0/8/3/-7|0/8/3/-6|0/8/3/6|0/8/3/7|0/8/3/8|0/8/3/9|0/8/4/-9|0/8/4/-8|0/8/4/-7|0/8/4/-6|0/8/4/6|0/8/4/7|0/8/4/8|0/8/4/9|0/8/5/-9|0/8/5/-8|0/8/5/-7|0/8/5/-6|0/8/5/6|0/8/5/7|0/8/5/8|0/8/5/9|0/8/6/-9|0/8/6/-8|0/8/6/-7|0/8/6/-6|0/8/6/6|0/8/6/7|0/8/6/8|0/8/6/9|0/8/7/-9|0/8/7/-8|0/8/7/-7|0/8/7/-6|0/8/7/6|0/8/7/7|0/8/7/8|0/8/7/9|0/8/8/-9|0/8/8/-8|0/8/8/-7|0/8/8/-6|0/8/8/6|0/8/8/7|0/8/8/8|0/8/8/9|0/8/9/-9|0/8/9/-8|0/8/9/-7|0/8/9/-6|0/8/9/6|0/8/9/7|0/8/9/8|0/8/9/9|0/8/10/-8|0/8/10/-7|0/8/10/7|0/8/10/8|1/8/11/-8|1/8/11/-7|1/8/11/7|1/8/11/8|2/8/12/-8|2/8/12/-7|2/8/12/7|2/8/12/8|0/9/-3/-8|0/9/-3/-7|0/9/-3/7|0/9/-3/8|0/9/-2/-8|0/9/-2/-7|0/9/-2/7|0/9/-2/8|0/9/-1/-8|0/9/-1/-7|0/9/-1/7|0/9/-1/8|0/9/0/-8|0/9/0/-7|0/9/0/7|0/9/0/8|0/9/1/-8|0/9/1/-7|0/9/1/7|0/9/1/8|0/9/2/-8|0/9/2/-7|0/9/2/7|0/9/2/8|0/9/3/-8|0/9/3/-7|0/9/3/7|0/9/3/8|0/9/4/-8|0/9/4/-7|0/9/4/7|0/9/4/8|0/9/5/-8|0/9/5/-7|0/9/5/7|0/9/5/8|0/9/6/-8|0/9/6/-7|0/9/6/7|0/9/6/8|0/9/7/-8|0/9/7/-7|0/9/7/7|0/9/7/8|0/9/8/-8|0/9/8/-7|0/9/8/7|0/9/8/8|0/9/9/-8|0/9/9/-7|0/9/9/7|0/9/9/8|")
				.reg(Init.BlockMindWarped).reg(Init.BlockRitualPylon, 0).reg(Init.BlockRitualPylon, 1)
				.reg(Init.RitualStonePower).reg(Init.BlockStableEldPortal).reg(Init.BlockDevice, 1).reg(ConfigBlocks.blockCosmeticOpaque, 1);
	
	public static final HashSet<Point> reactors = new HashSet<Point>();
	
	public boolean active;
	
	public TileReactor() {
		this.active = false;
	}
	
	@Override
	public boolean canUpdate() {
		return true;
	}
	
	@Override
	public void updateEntity() {
		super.updateEntity();
		structure.setRel(this.xCoord, this.yCoord, this.zCoord);
		boolean isStruct = this.worldObj.getBlock(xCoord, yCoord + 1, zCoord) == Blocks.cobblestone;//structure.checkStruct(this.worldObj);
		if (isStruct) {
			this.active = true;
		}
		else {
			if (this.active) {
				new BigExplosion(this.worldObj, this.xCoord, this.yCoord, this.zCoord, 1500f, 130f, 0.65f, 0.95f).create();
				this.active = false;
			}
		}
	}
	
	@Override
	public void readCustomNBT(NBTTagCompound nbt) {
		reactors.add(new Point(this.xCoord, this.zCoord));
	}
}
